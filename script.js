// script.js

// Banco de perguntas com 20 quest√µes sobre as caracter√≠sticas f√≠sicas da Europa
const questionsPool = [
    { question: "Qual √© a montanha mais alta da Europa Ocidental?", options: ["Mont Blanc", "C√°rpatos", "Pirineus"], answer: "Mont Blanc" },
    { question: "Qual √© a principal plan√≠cie que se estende do centro ao leste da Europa?", options: ["Plan√≠cie Europeia Central", "Plan√≠cie Siberiana", "Plan√≠cie do Dan√∫bio"], answer: "Plan√≠cie Europeia Central" },
    { question: "Qual rio √© o mais longo da Europa?", options: ["Volga", "Dan√∫bio", "Reno"], answer: "Volga" },
    { question: "Qual rio passa por v√°rios pa√≠ses da Europa Central e Oriental?", options: ["Dan√∫bio", "Volga", "T√¢misa"], answer: "Dan√∫bio" },
    { question: "Quais montanhas tradicionalmente marcam a fronteira entre a Europa e a √Åsia?", options: ["Urais", "Alpes", "C√°rpatos"], answer: "Urais" },
    { question: "Qual √© o mar que banha o sul da Europa?", options: ["Mar Mediterr√¢neo", "Mar do Norte", "Mar B√°ltico"], answer: "Mar Mediterr√¢neo" },
    { question: "Qual oceano banha a costa oeste da Europa?", options: ["Oceano Atl√¢ntico", "Oceano Pac√≠fico", "Oceano √çndico"], answer: "Oceano Atl√¢ntico" },
    { question: "Qual pen√≠nsula abriga os pa√≠ses de Espanha e Portugal?", options: ["Pen√≠nsula Ib√©rica", "Pen√≠nsula It√°lica", "Pen√≠nsula Balc√¢nica"], answer: "Pen√≠nsula Ib√©rica" },
    { question: "Qual pa√≠s europeu √© conhecido por sua grande quantidade de fiordes?", options: ["Noruega", "Gr√©cia", "Fran√ßa"], answer: "Noruega" },
    { question: "Que lago europeu est√° localizado entre a Su√≠√ßa e a Fran√ßa?", options: ["Lago de Genebra", "Lago Balaton", "Lago Onega"], answer: "Lago de Genebra" },
    { question: "Quais s√£o as principais florestas do norte da Europa?", options: ["Florestas de con√≠feras", "Florestas tropicais", "Florestas de mangue"], answer: "Florestas de con√≠feras" },
    { question: "Que tipo de vegeta√ß√£o √© predominante no sul da Europa, especialmente na regi√£o mediterr√¢nea?", options: ["Vegeta√ß√£o mediterr√¢nea", "Tundra", "Taiga"], answer: "Vegeta√ß√£o mediterr√¢nea" },
    { question: "Qual cidade famosa √© atravessada pelo Rio Sena?", options: ["Paris", "Londres", "Berlim"], answer: "Paris" },
    { question: "Que rio √© essencial para a navega√ß√£o e com√©rcio na Europa Ocidental?", options: ["Reno", "Volga", "Dan√∫bio"], answer: "Reno" },
    { question: "Qual lago europeu √© o maior em volume de √°gua?", options: ["Lago Ladoga", "Lago de Genebra", "Lago Balaton"], answer: "Lago Ladoga" },
    { question: "Qual das seguintes op√ß√µes N√ÉO √© uma das principais cadeias montanhosas da Europa?", options: ["Himalaia", "Alpes", "Pirineus"], answer: "Himalaia" },
    { question: "Qual √© o clima predominante na Europa Central?", options: ["Temperado", "√Årido", "Polar"], answer: "Temperado" },
    { question: "Que tipo de solo predomina nas plan√≠cies f√©rteis da Europa Central?", options: ["Solos f√©rteis", "Solos arenosos", "Solos vulc√¢nicos"], answer: "Solos f√©rteis" },
    { question: "A Tundra √© um bioma caracter√≠stico de qual regi√£o da Europa?", options: ["Norte", "Sul", "Centro"], answer: "Norte" },
    { question: "Qual mar separa a Europa da √Åfrica?", options: ["Mar Mediterr√¢neo", "Mar B√°ltico", "Mar Negro"], answer: "Mar Mediterr√¢neo" }
];

// Vari√°veis globais
let currentIndex = 0; // √çndice da pergunta atual
let selectedQuestions = []; // Perguntas selecionadas aleatoriamente
let score = 0; // Pontua√ß√£o do jogador
let leaderboardData = []; // Dados do ranking

// Seletores do DOM
const leaderboard = document.getElementById("leaderboard");
const nameSection = document.getElementById("name-section");
const playerNameInput = document.getElementById("player-name");
const startQuizButton = document.getElementById("start-quiz");

const quizSection = document.getElementById("quiz-section");
const quizQuestion = document.getElementById("quiz-question");
const quizOptions = document.getElementById("quiz-options");
const quizFeedback = document.getElementById("quiz-feedback");
const quizScore = document.getElementById("quiz-score");

const endSection = document.getElementById("end-section");
const finalScore = document.getElementById("final-score");
const playerDisplayName = document.getElementById("player-display-name");
const restartQuizButton = document.getElementById("restart-quiz");

// Fun√ß√£o para selecionar 10 perguntas aleat√≥rias
function selectRandomQuestions() {
    const shuffled = questionsPool.sort(() => Math.random() - 0.5); // Embaralha o banco de perguntas
    return shuffled.slice(0, 10); // Retorna as 10 primeiras perguntas embaralhadas
}

// Fun√ß√£o para iniciar o quiz
startQuizButton.addEventListener("click", () => {
    const playerName = playerNameInput.value.trim();
    if (!playerName) {
        alert("Por favor, insira seu nome antes de come√ßar!");
        return;
    }

    // Inicializa o quiz
    playerDisplayName.textContent = playerName;
    selectedQuestions = selectRandomQuestions();
    currentIndex = 0;
    score = 0;
    quizScore.textContent = "Pontos: 0";

    // Oculta a se√ß√£o de nome e exibe o quiz
    nameSection.style.display = "none";
    quizSection.style.display = "block";

    showQuestion(); // Mostra a primeira pergunta
});

// Fun√ß√£o para exibir a pergunta atual
function showQuestion() {
    const question = selectedQuestions[currentIndex];
    quizQuestion.textContent = question.question;
    quizOptions.innerHTML = ""; // Limpa op√ß√µes anteriores

    question.options.forEach(option => {
        const button = document.createElement("button");
        button.textContent = option;
        button.className = "quiz-option";
        button.addEventListener("click", () => checkAnswer(option)); // Adiciona evento de clique
        quizOptions.appendChild(button);
    });

    // Atualiza o n√∫mero da pergunta atual
    const questionNumber = document.getElementById("question-number");
    questionNumber.textContent = currentIndex + 1;
}

// Fun√ß√£o para verificar a resposta
function checkAnswer(selected) {
    const question = selectedQuestions[currentIndex];
    if (selected === question.answer) {
        score += 10; // Adiciona pontos se a resposta estiver correta
        quizFeedback.textContent = "üéâ Correto!";
        quizFeedback.style.color = "green";
    } else {
        quizFeedback.textContent = "‚ùå Errado!";
        quizFeedback.style.color = "red";
    }

    quizScore.textContent = `Pontos: ${score}`; // Atualiza pontua√ß√£o exibida

    // Avan√ßa para a pr√≥xima pergunta
    currentIndex++;
    setTimeout(() => {
        quizFeedback.textContent = ""; // Limpa feedback ap√≥s 1 segundo
        if (currentIndex < selectedQuestions.length) {
            showQuestion(); // Mostra pr√≥xima pergunta
        } else {
            finishQuiz(); // Finaliza o quiz se todas as perguntas foram respondidas
        }
    }, 1000);
}

// Fun√ß√£o para finalizar o quiz
function finishQuiz() {
    quizSection.style.display = "none";
    endSection.style.display = "block";
    finalScore.textContent = `Voc√™ marcou ${score} pontos!`;

    // Adiciona o jogador ao ranking
    leaderboardData.push({ name: playerDisplayName.textContent, score });
    leaderboardData.sort((a, b) => b.score - a.score); // Ordena ranking por pontua√ß√£o
    updateLeaderboard();
}

// Fun√ß√£o para atualizar o ranking
function updateLeaderboard() {
    leaderboard.innerHTML = ""; // Limpa ranking existente
    leaderboardData.forEach(player => {
        const li = document.createElement("li");
        li.textContent = `${player.name} - ${player.score} pontos`;
        leaderboard.appendChild(li);
    });
}

// Fun√ß√£o para reiniciar o quiz
restartQuizButton.addEventListener("click", () => {
    endSection.style.display = "none";
    nameSection.style.display = "block";
    playerNameInput.value = ""; // Reseta o campo de nome
});